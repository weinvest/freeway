cmake_minimum_required(VERSION 2.8)
SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)
SET(CMAKE_INCLUDE_CURRENT_DIR ON)
SET(BUILD_SHARED_LIBS ON)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++1y -Werror=uninitialized -Werror=return-type")


SET(TARGET freeway)
PROJECT(${TARGET})
INCLUDE(CollectSrcs)

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})


ADD_DEFINITIONS(-DMEMLOG_TIMESTAMP)
ADD_DEFINITIONS(-DCOMMON_LIBRARY)
IF(win32)
    ADD_DEFINITIONS(-DBOOST_ALL_NO_LIB BOOST_ASIO_DISABLE_STD_ATOMIC)
ENDIF()

SET(${TARGET}_SUBDIRS .)

GET_SRCS(${TARGET}_SRCLISTS ${TARGET}_SUBDIRS)
ADD_LIBRARY(${TARGET} SHARED ${${TARGET}_SRCLISTS} ITask.cpp)

set_target_properties(${TARGET} PROPERTIES VERSION $ENV{BUILD_VERSION} SOVERSION $ENV{BUILD_VERSION})
#set_target_properties(${TARGET} PROPERTIES COTIRE_PREFIX_HEADER_IGNORE_PATH "boost/preprocessor")
#cotire(${TARGET})
TARGET_LINK_LIBRARIES(${TARGET} log4cplus tbb boost_system boost_context boost_thread)
if(win32)
    LINK_DIRECTORIES(C:\Windows\System32)
TARGET_LINK_LIBRARIES(${TARGET} gdi32 user32 ws2_32)
endif()

MESSAGE(STATUS ${${TARGET}_HEADER_LISTS})
INSTALL(TARGETS ${TARGET}
RUNTIME DESTINATION bin
LIBRARY DESTINATION lib
ARCHIVE DESTINATION lib)

FILE(GLOB_RECURSE ${TARGET}_HEADER_LISTS "*.h" "*.hpp")
INSTALL_FILES(include ${TARGET}_HEADER_LISTS)
